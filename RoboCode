myVariable = 0

def ondriver_drivercontrol_0():
    global myVariable
    drivetrain.set_drive_velocity(80, PERCENT)
    drivetrain.set_turn_velocity(80, PERCENT)
    while True:
        bottom_intake.set_velocity(100, PERCENT)
        top_intake.set_velocity(100, PERCENT)
        if controller_1.buttonL2.pressing() or controller_1.buttonR2.pressing():
            top_intake.spin(FORWARD)
            bottom_intake.spin(REVERSE)
        else:
            if controller_1.buttonR1.pressing() or controller_1.buttonL1.pressing():
                top_intake.spin(REVERSE)
                bottom_intake.spin(FORWARD)
            else:
                bottom_intake.stop()
                top_intake.stop()
        wait(5, MSEC)

def onauton_autonomous_0():
    global myVariable
    top_intake.set_velocity(100, PERCENT)
    bottom_intake.set_velocity(100, PERCENT)
    drivetrain.set_drive_velocity(100, PERCENT)
    drivetrain.set_turn_velocity(100, PERCENT)
    drivetrain.drive_for(FORWARD, 24, INCHES, wait=True)
    drivetrain.turn_for(RIGHT, 90, DEGREES, wait=True)
    drivetrain.drive_for(FORWARD, 24, INCHES, wait=True)
    drivetrain.turn_for(RIGHT, 45, DEGREES, wait=True)
    drivetrain.drive_for(FORWARD, 19, INCHES, wait=True)
    top_intake.spin_for(FORWARD, 4, TURNS, wait=False)
    bottom_intake.spin_for(REVERSE, 4, TURNS, wait=True)
    drivetrain.drive_for(REVERSE, 19, INCHES, wait=True)
    drivetrain.turn_for(LEFT, 135, DEGREES, wait=True)
    drivetrain.drive_for(FORWARD, 48, INCHES, wait=True)
    drivetrain.turn_for(LEFT, 90, DEGREES, wait=True)
    drivetrain.drive_for(FORWARD, 14, INCHES, wait=True)
    top_intake.spin(FORWARD)
    bottom_intake.spin(REVERSE)

# create a function for handling the starting and stopping of all autonomous tasks
def vexcode_auton_function():
    # Start the autonomous control tasks
    auton_task_0 = Thread( onauton_autonomous_0 )
    # wait for the driver control period to end
    while( competition.is_autonomous() and competition.is_enabled() ):
        # wait 10 milliseconds before checking again
        wait( 10, MSEC )
    # Stop the autonomous control tasks
    auton_task_0.stop()

def vexcode_driver_function():
    # Start the driver control tasks
    driver_control_task_0 = Thread( ondriver_drivercontrol_0 )
    # wait for the driver control period to end
    while( competition.is_driver_control() and competition.is_enabled() ):
        # wait 10 milliseconds before checking again
        wait( 10, MSEC )
    # Stop the driver control tasks
    driver_control_task_0.stop()

# register the competition functions
competition = Competition( vexcode_driver_function, vexcode_auton_function )
